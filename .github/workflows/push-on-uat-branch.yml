# Unique name for this workflow
name: Deploy staging branch to staging/uat orgs

# Definition when the workflow should run
on:
  push:
    branches: [staging]
    paths:
      - 'force-app/**'

# Jobs to be executed
jobs:
  deploy-branch-to-int-and-staging-orgs:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: |
          npm install @salesforce/cli --location=global
          nodeInstallPath=$(npm config get prefix)
          echo "$nodeInstallPath/bin" >> $GITHUB_PATH
          sf --version

      # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
      - name: 'Installing sfdx git delta'
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins

      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Store secret for both otgs
      - name: 'Populate auth file with SFDX_URL secret of the integration and staging orgs'
        shell: bash
        run: |
          echo ${{ secrets.SFDX_UAT_URL }} > ./SFDX_UAT_URL.txt

      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
          mkdir changed-sources
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

      # Authenticate to org
      - name: 'Authenticate to UAT org'
        run: sf org login sfdx-url -f ./SFDX_UAT_URL.txt -a staging -d -s
        # sfdx auth:sfdxurl:store -f ./SFDX_UAT_URL.txt -s -a staging

      - name: 'Deploy the entire branch to UAT org'
        run: sf project deploy start -d force-app -l NoTestRun --target-org=staging --json
        # sfdx force:source:deploy -p force-app --testlevel RunLocalTests --json

      - name: 'Deploy destructive changes (if any) to UAT org'
        run: sf project deploy start --metadata-dir "changed-sources/destructiveChanges" --target-org=staging --dry-run --ignore-warnings
        # sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings

      # # Authenticate to org
      # - name: 'Authenticate to Staging Org to Staging org'
      #   run: sf org login sfdx-url -f ./SFDX_STAGING_URL.txt -a staging -d -s
      #   # sfdx auth:sfdxurl:store -f ./SFDX_STAGING_URL.txt -s -a staging

      # - name: 'Deploy the entire branch'
      #   run: sf project deploy start -d force-app -l RunLocalTests --json
      #   # sfdx force:source:deploy -p force-app --testlevel RunLocalTests --json

      # - name: 'Deploy destructive changes (if any) to Staging org'
      #   run: sf project deploy start --metadata-dir "changed-sources/destructiveChanges" --dry-run --ignore-warnings
      #   # sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings
